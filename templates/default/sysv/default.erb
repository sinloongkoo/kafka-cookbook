#!/bin/bash
#
# Init file for <%= @daemon_name.capitalize %>
#
# chkconfig: 345 20 80
# description: <%= @daemon_name %> daemon
# pidfile: /var/run/<%= @daemon_name %>.pid

NAME=<%= @daemon_name %>
USER=<%= @user %>
SCRIPTS_DIR=<%= @scripts_dir %>
PIDFILE=/var/run/$NAME.pid
NOHUP=$(which nohup)
RETVAL=0

# Source function library
[ -f /etc/init.d/functions ] && . /etc/init.d/functions

# Source networking configuration
[ -f /etc/sysconfig/network ] && . /etc/sysconfig/network

# Load additional configuration
[ -f <%= @env_path %> ] && . <%= @env_path %>

# Check that networking is up
[ "$NETWORKING" = "no" ] && exit $RETVAL

success_or_failure() {
  if [ "$1" -eq 0 ]; then
    success
  else
    failure
  fi
}

start() {
  [ ! -e "$PIDFILE" ] && touch "$PIDFILE" && chown "$USER" "$PIDFILE"
  <% if @ulimit %>
  ulimit -n <%= @ulimit %>
  <% end %>
  echo -n "Starting $NAME"
  daemon --user="$USER" --pidfile="$PIDFILE" "$NOHUP $KAFKA_RUN $KAFKA_ARGS $KAFKA_CONFIG > /dev/null 2>&1 & echo \$! > $PIDFILE"
  RETVAL=$?
  if [ "$RETVAL" -eq 0 ]; then
    $SCRIPTS_DIR/post-start --pid="$(cat "$PIDFILE")"
    RETVAL=$?
  fi
  success_or_failure "$RETVAL"
  return $RETVAL
}

stop() {
  echo -n "Stopping $NAME"
  if [ -e "$PIDFILE" ]; then
    $SCRIPTS_DIR/stop --pid="$(cat "$PIDFILE")"
    RETVAL=$?
    rm -f "$PIDFILE"
  fi
  success_or_failure "$RETVAL"
  return $RETVAL
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status -p "$PIDFILE" "$NAME"
    RETVAL=$?
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    RETVAL=3
    ;;
esac

exit $RETVAL
